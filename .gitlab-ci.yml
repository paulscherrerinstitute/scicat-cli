# variables:
#   IMAGE_TAG_NAME: "docker.psi.ch:5000/scicat/rollout/proposals"

# .deploy-common:
#   tags:
#     - specific
#     - shell
#   rules:
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
#       changes:
#         - Software/00-General/proposals/Dockerfile
#         - Software/00-General/proposals/helm/**/*
#         - Software/00-General/proposals/**/*.py
#         - .gitlab-ci.yml
#   before_script: 
#     - cd Software/00-General/proposals
#   script:
#     - >-
#       helm upgrade sync helm/duo_facility_proposals/
#       --install -n ${CI_ENVIRONMENT_NAME} --create-namespace
#       --set "image.tag=${CI_COMMIT_SHORT_SHA}"
#       --set "scicat_endpoint=${SCICAT_ENDPOINT}"
#       --set "scicat_username=${SCICAT_USERNAME}"
#       --set "scicat_password=${SCICAT_PASSWORD}"
#       --set "duo_endpoint=${DUO_ENDPOINT}"
#       --set "duo_secret=${DUO_SECRET}"
#       --set-file "facilities_schedule=${FACILITIES_SCHEDULE}"

# stages:
#   - build
#   - check-code-quality
#   - deploy

# build-docker-images:
#   stage: build
#   tags:
#     - specific
#     - shell
#   rules:
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
#       changes:
#         - Software/00-General/proposals/Dockerfile
#         - Software/00-General/proposals/helm/**/*
#         - Software/00-General/proposals/**/*.py
#         - .gitlab-ci.yml
#   before_script:
#     - cd Software/00-General/proposals
#   script:
#     - docker build --network host --target dev --pull -t "$IMAGE_TAG_NAME:dev-$CI_COMMIT_SHORT_SHA" .
#     - docker build --network host --pull -t "$IMAGE_TAG_NAME:$CI_COMMIT_SHORT_SHA" .

# black:
#   stage: check-code-quality
#   tags:
#     - specific
#     - shell
#   rules:
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
#       changes:
#         - Software/00-General/proposals/**/*.py
#   before_script:
#     - cd Software/00-General/proposals
#     - docker run -d --rm --name proposals -v $(pwd):/usr/src/proposals $IMAGE_TAG_NAME:dev-$CI_COMMIT_SHORT_SHA /bin/sh -c "while sleep 1000; do :; done"
#   script:
#     - docker exec proposals black --check --diff --no-color ./src
#   after_script:
#     - docker stop proposals

# isort:
#   stage: check-code-quality
#   tags:
#     - specific
#     - shell
#   rules:
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
#       changes:
#         - Software/00-General/proposals/**/*.py
#   before_script:
#     - cd Software/00-General/proposals
#     - docker run -d --rm --name proposals -v $(pwd):/usr/src/proposals $IMAGE_TAG_NAME:dev-$CI_COMMIT_SHORT_SHA /bin/sh -c "while sleep 1000; do :; done"
#   script:
#     - docker exec proposals isort --check --diff ./src
#   after_script:
#     - docker stop proposals

# pylint:
#   stage: check-code-quality
#   tags:
#     - specific
#     - shell
#   allow_failure: true
#   rules:
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
#       changes:
#         - Software/00-General/proposals/**/*.py
#   before_script:
#     - cd Software/00-General/proposals
#     - docker run -d --rm --name proposals -v $(pwd):/usr/src/proposals $IMAGE_TAG_NAME:dev-$CI_COMMIT_SHORT_SHA /bin/sh -c "while sleep 1000; do :; done"
#   script:
#     - docker exec proposals pylint ./src
#   after_script:
#     - docker stop proposals

# test:
#   stage: check-code-quality
#   tags:
#     - specific
#     - shell
#   rules:
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
#       changes:
#         - Software/00-General/proposals/**/*.py
#   before_script:
#     - cd Software/00-General/proposals
#     - docker run -d --rm --name proposals -v $(pwd):/usr/src/proposals $IMAGE_TAG_NAME:dev-$CI_COMMIT_SHORT_SHA /bin/sh -c "while sleep 1000; do :; done"
#   script:
#     - docker exec proposals pytest -p no:cacheprovider ./src/tests
#   after_script:
#     - docker stop proposals

# docker-push:
#   stage: deploy
#   tags:
#     - specific
#     - shell
#   rules:
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
#       changes:
#         - Software/00-General/proposals/Dockerfile
#         - Software/00-General/proposals/helm/**/*
#         - Software/00-General/proposals/**/*.py
#         - .gitlab-ci.yml
#   before_script:
#     - cd Software/00-General/proposals
#   script:
#     - docker push $IMAGE_TAG_NAME:$CI_COMMIT_SHORT_SHA

# deploy-k8s-qa:
#   stage: deploy
#   extends: .deploy-common
#   environment: qa

# deploy-k8s-prod:
#   stage: deploy
#   extends: .deploy-common
#   environment: production
#   before_script:
#     - cd Software/00-General/proposals
#     - docker build --network host --pull -t "$IMAGE_TAG_NAME:$CI_COMMIT_SHORT_SHA" -t "$IMAGE_TAG_NAME:latest" .
#     - docker push "$IMAGE_TAG_NAME"
#   rules:
#     - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PROJECT_ID == "5133"'
#       changes:
#         - Software/00-General/proposals/Dockerfile
#         - Software/00-General/proposals/helm/**/*
#         - Software/00-General/proposals/**/*.py
#         - .gitlab-ci.yml
#   after_script:
#     - docker rmi $IMAGE_TAG_NAME:$CI_COMMIT_SHORT_SHA
#     - docker rmi $IMAGE_TAG_NAME:latest

# clean-up:
#   stage: .post
#   tags:
#     - specific
#     - shell
#   rules:
#     - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
#       changes:
#         - Software/00-General/proposals/Dockerfile
#         - Software/00-General/proposals/helm/**/*
#         - Software/00-General/proposals/**/*.py
#         - .gitlab-ci.yml
#       when: always
#   script:
#     - docker rmi $IMAGE_TAG_NAME:dev-$CI_COMMIT_SHORT_SHA
#     - docker rmi $IMAGE_TAG_NAME:$CI_COMMIT_SHORT_SHA
